<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ReplState" timestamp="1481833495855">{:repl-history {:ide [], :local [&quot;(+ 2 2)&quot; &quot;(str \&quot;hello \&quot;)&quot; &quot;(doc map)&quot; &quot;(clojure.string.split \&quot;123.456.789.321\&quot; #\&quot;\\.\&quot;)&quot; &quot;(require clojure.string :as str)&quot; &quot;(require '[clojure.string :as str])&quot; &quot;(split \&quot;123.456.789.321\&quot; #\&quot;\\.\&quot;)&quot; &quot;(doc split)&quot; &quot;(str/split )&quot; &quot;(str/split \&quot;123.456.789.321\&quot; #\&quot;\\.\&quot;)&quot; &quot;(map str (str/split \&quot;123.456.789.321\&quot; #\&quot;\\.\&quot;))&quot; &quot;(map Integer/valueOf (str/split \&quot;123.456.789.321\&quot; #\&quot;\\.\&quot;))&quot; &quot;(map  (Integer/parseInt \&quot;123.456.789.321\&quot; #\&quot;\\.\&quot;))&quot; &quot;(map  (partial Integer/parseInt) (str/split \&quot;123.456.789.321\&quot; #\&quot;\\.\&quot;))&quot; &quot;(map read-string (str/split \&quot;123.456.789.321\&quot; #\&quot;\\.\&quot;))&quot; &quot;(Integer/parseInt \&quot;123\&quot;)&quot; &quot;(map (Integer/parseInt) [\&quot;1\&quot; \&quot;2\&quot; \&quot;3\&quot;])&quot; &quot;(map #(Integer/parseInt %) [\&quot;1\&quot; \&quot;2\&quot; \&quot;3\&quot;])&quot; &quot;(map #(Integer/valueOf %) [\&quot;1\&quot; \&quot;2\&quot; \&quot;3\&quot;])&quot; &quot;(map #(Integer/valueOf %) (str/split \&quot;123.456.789.321\&quot; #\&quot;\\.\&quot;))&quot; &quot;(+ (map #(Integer/valueOf %) (str/split \&quot;123.456.789.321\&quot; #\&quot;\\.\&quot;)))&quot; &quot;(apply + (map #(Integer/valueOf %) (str/split \&quot;123.456.789.321\&quot; #\&quot;\\.\&quot;)))&quot; &quot;(str 1 )&quot; &quot;(print 1 )&quot; &quot;(print 1)&quot; &quot;(str 1)&quot; &quot;(apply + 1)&quot; &quot;(apply + (range 10))&quot; &quot;(defn octetIp-&gt;longIp [octetIp]\n\t(let [octet-parts (map #(Integer/valueOf %) (str/split octetIp #\&quot;\\.\&quot;))]\n\t\toctet-parts))&quot; &quot;(octetIp-&gt;longIp \&quot;123.234.345.456\&quot;)&quot; &quot;(octetIp-&gt;longIp \&quot;123.234.345.\&quot;)&quot; &quot;(octetIp-&gt;longIp \&quot;123.234.345\&quot;)&quot; &quot;(octetIp-&gt;longIp \&quot;1\&quot;)&quot; &quot;\n(map #(Integer/valueOf %) (str/split \&quot;123.456.789.321\&quot; #\&quot;\\.\&quot;))&quot; &quot;\n(map #(Integer/valueOf %) (str/split \&quot;1.2.3.4\&quot; #\&quot;\\.\&quot;))&quot; &quot;(map #(Integer/valueOf %) (str/split \&quot;1.2.3.4\&quot; #\&quot;\\.\&quot;))&quot; &quot;(map + (map #(Integer/valueOf %) (str/split \&quot;1.2.3.4\&quot; #\&quot;\\.\&quot;) [16777216 65536 256 1]))&quot; &quot;(map + (map #(Integer/valueOf %) (str/split \&quot;1.2.3.4\&quot; #\&quot;\\.\&quot;)) [1 2 3 4])&quot; &quot;(map * (map #(Integer/valueOf %) (str/split \&quot;1.2.3.4\&quot; #\&quot;\\.\&quot;)) [1 2 3 4])&quot; &quot;(+ (map * (map #(Integer/valueOf %) (str/split \&quot;1.2.3.4\&quot; #\&quot;\\.\&quot;)) [1 2 3 4]))&quot; &quot;(apply + (map * (map #(Integer/valueOf %) (str/split \&quot;1.2.3.4\&quot; #\&quot;\\.\&quot;)) [1 2 3 4]))&quot; &quot;(let [octet-parts (map #(Integer/valueOf %) (str/split octetIp #\&quot;\\.\&quot;))\n\t\t\t\toctet-rations [16777216 65536 256 1]]\n\t\t(apply + (map * octet-parts octet-rations)))&quot; &quot;(defn octetIp-&gt;longIp [octetIp]\n\t(let [octet-parts (map #(Integer/valueOf %) (str/split octetIp #\&quot;\\.\&quot;))\n\t\t\t\toctet-rations [16777216 65536 256 1]]\n\t\t(apply + (map * octet-parts octet-rations))))&quot; &quot;(octetIp-&gt;longIp \&quot;202.186.13.4\&quot;)&quot; &quot;(midje-test)&quot; &quot;(autotest)&quot; &quot;(octetIp-&gt;longIp )&quot; &quot;(octetIp-&gt;longIp \&quot;\&quot;)&quot;], :remote []}}</component>
</project>